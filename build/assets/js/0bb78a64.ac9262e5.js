"use strict";(self.webpackChunkchargily_epay_docs=self.webpackChunkchargily_epay_docs||[]).push([[129],{3905:(e,n,a)=>{a.d(n,{Zo:()=>s,kt:()=>d});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function m(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):m(m({},n),e)),a},s=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,u=c["".concat(l,".").concat(d)]||c[d]||y[d]||o;return a?t.createElement(u,m(m({ref:n},s),{},{components:a})):t.createElement(u,m({ref:n},s))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,m=new Array(o);m[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,m[1]=i;for(var p=2;p<o;p++)m[p]=a[p];return t.createElement.apply(null,m)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6030:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>m,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=a(7462),r=(a(7294),a(3905));const o={title:"Chargily ePay with Django",sidebar_label:"Django",sidebar_position:2,slug:"/epay-django"},m=void 0,i={unversionedId:"addons-for-frameworks/django",id:"addons-for-frameworks/django",title:"Chargily ePay with Django",description:"Installation",source:"@site/docs/addons-for-frameworks/django.md",sourceDirName:"addons-for-frameworks",slug:"/epay-django",permalink:"/chargily-dev-docs/epay-django",draft:!1,editUrl:"https://github.com/Chargily/chargily-dev-docs/docs/addons-for-frameworks/django.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Chargily ePay with Django",sidebar_label:"Django",sidebar_position:2,slug:"/epay-django"},sidebar:"tutorialSidebar",previous:{title:"Laravel",permalink:"/chargily-dev-docs/epay-laravel"},next:{title:"Symphony",permalink:"/chargily-dev-docs/epay-symfony"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Create Payment model",id:"create-payment-model",level:2},{value:"CreatePaymentView",id:"createpaymentview",level:2},{value:"Example",id:"example",level:4},{value:"PaymentConfirmationView",id:"paymentconfirmationview",level:2},{value:"PaymentObjectStatusView, Or PaymentObjectDoneView",id:"paymentobjectstatusview-or-paymentobjectdoneview",level:2},{value:"Example",id:"example-1",level:4},{value:"FakePayment",id:"fakepayment",level:3},{value:"Example",id:"example-2",level:4},{value:"Result",id:"result",level:2},{value:"Examples",id:"examples",level:2}],s={toc:p};function y(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"pip install chargily-epay-Django\n")),(0,r.kt)("h2",{id:"create-payment-model"},"Create Payment model"),(0,r.kt)("p",null,"to create a payment model you need to extend one of the following classes ",(0,r.kt)("inlineCode",{parentName:"p"},"AbstractPayment"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AnonymPayment"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AnonymPayment"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"from chargily_epay_django.models import AnonymPayment\n\nclass Payment(AnonymPayment):\n    webhook_url = 'payment-confirmation' # reverse url\n    back_url = 'payment-status' # reverse url\n")),(0,r.kt)("h2",{id:"createpaymentview"},"CreatePaymentView"),(0,r.kt)("p",null,"you can create a new Payment using ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePaymentView"),", this class extends from ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateView")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# views.py\nfrom django.forms import ModelForm\n\nfrom chargily_epay_django.views import CreatePaymentView\n\nfrom my_app.models import Payment\n\nclass PaymentForm(ModelForm):\n    class Meta:\n        model = Payment\n        fields = ['client', 'client_email', 'amount', 'mode', 'comment']\n\nclass CreatePayment(CreatePaymentView):\n    template_name: str = \"payment/payment-template.html\"\n    form_class = PaymentForm\n")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/Chargily/chargily-epay-django/raw/main/images/create_payment.png",alt:"payment"})),(0,r.kt)("h2",{id:"paymentconfirmationview"},"PaymentConfirmationView"),(0,r.kt)("p",null,"if you want to confirme payment you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"PaymentConfirmationView")," view, this view responsable for reciving payment confirmation from third party."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# views.py\n# .....\nfrom chargily_epay_django.views import CreatePaymentView, PaymentConfirmationView\n\n# .....\n\nclass PaymentConfirmation(PaymentConfirmationView):\n    model = Payment\n")),(0,r.kt)("h2",{id:"paymentobjectstatusview-or-paymentobjectdoneview"},"PaymentObjectStatusView, Or PaymentObjectDoneView"),(0,r.kt)("p",null,"to check payment status you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"PaymentObjectStatusView"),", Or ",(0,r.kt)("inlineCode",{parentName:"p"},"PaymentObjectDoneView")," check the doc to see dirence"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'# views.py\n# .....\nfrom chargily_epay_django.views import CreatePaymentView, PaymentConfirmationView, PaymentObjectDoneView\n# .....\n\nclass PaymentStatus(PaymentObjectDoneView):\n    template_name: str = "payment/payment-status.html"\n    model = Payment\n')),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/Chargily/chargily-epay-django/raw/main/images/payment_status.png",alt:"payment"})),(0,r.kt)("h3",{id:"fakepayment"},"FakePayment"),(0,r.kt)("p",null,"if you are working in ",(0,r.kt)("inlineCode",{parentName:"p"},"Devlopment")," mode you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"FakePaymentView")," all you need to do is to create a view and extend this class and add ",(0,r.kt)("inlineCode",{parentName:"p"},"FakePaymentMixin"),"  , to ",(0,r.kt)("inlineCode",{parentName:"p"},"Payment")," model"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# models.py\n\nfrom chargily_epay_django.models import AnonymPayment, FakePaymentMixin\n\nclass Payment(FakePaymentMixin,AnonymPayment):\n    webhook_url = 'payment-confirmation' # reverse url\n    back_url = 'payment-status' # reverse url\n    fake_payment_url = \"fake-payment\" # reverse url\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# view \nfrom chargily_epay_django.views import (\n    CreatePaymentView,\n    PaymentConfirmationView,\n    PaymentObjectDoneView,\n    FakePaymentView\n)\n\nclass FakePayment(FakePaymentView):\n    model = Payment\n")),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/Chargily/chargily-epay-django/raw/main/images/fake_payment.png",alt:"fake_payment"})),(0,r.kt)("h2",{id:"result"},"Result"),(0,r.kt)("p",null,"we now can ",(0,r.kt)("strong",{parentName:"p"},"CREATE"),", ",(0,r.kt)("strong",{parentName:"p"},"UPDATE")," and ",(0,r.kt)("strong",{parentName:"p"},"READ")," payment using this few lines of code."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),": you still have to configure settings, and urls.py"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# models.py\n\nfrom chargily_epay_django.models import AnonymPayment, FakePaymentMixin\n\nclass Payment(FakePaymentMixin,AnonymPayment):\n    webhook_url = 'payment-confirmation' # reverse url\n    back_url = 'payment-status' # reverse url\n    fake_payment_url = \"fake-payment\" # reverse url\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# views.py\n\nfrom django.forms import ModelForm\n\nfrom chargily_epay_django.views import (\n    CreatePaymentView,\n    PaymentConfirmationView,\n    PaymentObjectDoneView,\n    FakePaymentView\n\n)\n\nfrom my_app.models import Payment\n\n# FORM\nclass PaymentForm(ModelForm):\n    class Meta:\n        model = Payment\n        fields = ['client', 'client_email', 'amount', 'mode', 'comment']\n\n# VIEWS\nclass CreatePayment(CreatePaymentView):\n    template_name: str = \"payment/payment-template.html\"\n    form_class = PaymentForm\n\n\nclass PaymentConfirmation(PaymentConfirmationView):\n    model = Payment\n\n\nclass PaymentStatus(PaymentObjectDoneView):\n    template_name: str = \"payment/payment-status.html\"\n    model = Payment\n\nclass FakePayment(FakePaymentView):\n    model = Payment\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tarek-berkane/donation_website"},"Donation website")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tarek-berkane/Sponsor-site"},"sponsor site")))}y.isMDXComponent=!0}}]);