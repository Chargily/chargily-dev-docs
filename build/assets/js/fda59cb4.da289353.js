"use strict";(self.webpackChunkchargily_epay_docs=self.webpackChunkchargily_epay_docs||[]).push([[270],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=a,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9597:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Chargily ePay with React",sidebar_label:"React",sidebar_position:4,slug:"/epay-react-js"},i=void 0,l={unversionedId:"addons-for-frameworks/react",id:"addons-for-frameworks/react",title:"Chargily ePay with React",description:"Requirements",source:"@site/docs/addons-for-frameworks/react.md",sourceDirName:"addons-for-frameworks",slug:"/epay-react-js",permalink:"/epay-react-js",draft:!1,editUrl:"https://github.com/Chargily/chargily-dev-docs/docs/addons-for-frameworks/react.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Chargily ePay with React",sidebar_label:"React",sidebar_position:4,slug:"/epay-react-js"},sidebar:"tutorialSidebar",previous:{title:"Symphony",permalink:"/epay-symfony"},next:{title:"NextJS",permalink:"/epay-next-js"}},s={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Get started",id:"get-started",level:2},{value:"Usage/Examples",id:"usageexamples",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Node 8, 10 or higher."),(0,a.kt)("li",{parentName:"ul"},"Node package manager (npm).")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install this package with npm"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  npm install chargily-epay-react-js\n")),(0,a.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"To run this project, you will need to add the following environment variables to your .env file."),(0,a.kt)("p",null,"Open the project and create .env file in the root directory."),(0,a.kt)("p",null,"Create-react-app does not allow you to define Environment Variables that do not start with the REACT",(0,a.kt)("em",{parentName:"p"},"APP")," prefix."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"REACT_APP_CHARGILY_APP_KEY")),(0,a.kt)("p",null,"If you are wondering about the app_secret, it will be used in the backend to validate the incoming webhooks. "),(0,a.kt)("h2",{id:"get-started"},"Get started"),(0,a.kt)("p",null,"Check ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/41NOoEz3Tzc"},"this")," video to more understand about webhooks."),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"https://beeceptor.com"},"beeceptor")," to actually observe some details(body, headers) about\nthe post request (webhook)."),(0,a.kt)("p",null,"You need to validate the incoming webhooks in the backend, here is where you will need the app_secret that you got from ",(0,a.kt)("a",{parentName:"p",href:"https://epay.chargily.com.dz"},"ePay by Chargily")," previously."),(0,a.kt)("p",null,"check the documentaion of laravel or express packages in github(depends on what you're using in the backend) too see how validate incoming webhooks."),(0,a.kt)("h2",{id:"usageexamples"},"Usage/Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import {create_payement} from \'chargily-epay-react-js\'\n\nfunction App() {\n\n  const handleClick = async()=>{\n\n    const invoice = {\n      "amount":600,\n      "invoice_number":23,\n      "client":"Ahmed malek", // add a text field to allow the user to enter his name, or get it from a context api (depends on the project architecture)\n      "mode":"CIB",\n      "webhook_url":"https://your_beeceptor_url.free.beeceptor.com", // here is the webhook url, use beecptor to easly see the post request and it\'s body, you will use this in backened to save and validate the transactions.\n      "back_url":"https://www.youtube.com/", // to where the user will be redirected after he finish/cancel the payement \n      "discount" :0\n  }\n    try {\n      await create_payement(invoice)\n    } catch (error) {\n      // handle your error here \n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      {/* Here you can add a form, to get te client name, the mode Edahabiya or CIB, the amount & discount */}\n      {/* It really depends on the project architecture, for example you will not need \n      to add a text field input to get the name of the user if he is  logged in\n      (get the name from redux toolkit or react context api for example) */}\n      \n      \n      <button onClick={handleClick}>testing</button>\n    </>\n  );\n}\n\nexport default App;\n\n')))}u.isMDXComponent=!0}}]);